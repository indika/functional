Each new term in the Fibonacci sequence is generated by adding the previous two terms.

By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.



fib 0 = 0
fib 1 = 1
fib n = fib (n-1) + fib (n-2)
This implementation requires O(fib n) additions.



* Circular tails
    fib             = 1 : 1 : [ a+b | (a,b) <- zip fib (tail fib) ]

Haskell translation of python algo

{- def fib(n):
      a, b = 0, 1
      for _ in xrange(n):
          a, b = b, a + b
      return a  -}


